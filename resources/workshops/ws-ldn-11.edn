{:title    "High Performance ClojureScript - WebGL, WebRTC, Web workers & asm.js"
 :date     "29 June - 1 July 2016"
 :loc      "North London"
 :audience "Intermediate Clojure / ClojureScript"
 :capacity 7
 :id       "WS-LDN-11"
 :price    "Â£575.00 (+ 20% VAT in UK only)"
 :url      "https://github.com/thi-ng/ws-ldn-5/"
 :topics   ["ClojureScript" "Optimization techniques" "WebGL" "GLSL" "asm.js" "Emscripten" "WebRTC video" "2D/3D geometry" "Game development" "GPGPU" "C" "Web workers" "Websockets" "Closure compiler modules" "React.js" "Figwheel"]
 :shopify  {:store    "thi-ng-store.myshopify.com"
            :product  "High Performance Clojurescript - WebGL, WebWorkers, asm.js (June 2016)"
            :handle   "high-performance-clojurescript-webgl-webworkers-asm-js-june-2016"
            :cart     "17612695749:1"
            :discount [{:id "WS-LDN-11-EARLY" :num 3 :percent "15%" :until "1 June 2016"}
                       {:id "WS-REPEAT" :percent "20% off for repeat students"}]}
 :extras   [:div
            [:p [:img {:src "/img/workshop/ws-ldn-8-particles.jpg" :alt "Particle system" :width "100%"}]]
            [:p "Screenshot of a WebGL/GLSL workshop exercise: Particle system written in C, compiled to asm.js with Emscripten, controlled & visualized via ClojureScript"]]
 :desc     [:div
            [:p "Due to popular demand, this will be an updated session of WS-LDN-8 with different exercises & different scope:"]
            "As ClojureScript is finding more inroads into interactive, online & mobile apps, experiences and games with high demands on runtime performance, this workshop is tailored to give you the insights into advanced techniques to tickle out maximum performance for your demanding CLJS projects where it matters. Learn how to write more efficient ClojureScript, achieve optimizations of factor 650x, harness the power of WebGL & GLSL to offload computations to the GPU, learn about WebRTC and combine with GLSL for realtime video processing, write performance critical code in C, cross-compile to highly optimized asm.js and interact via Clojurescript."
            [:h3 "Scheduled topics"]
            [:ul
             [:li "Awareness & workarounds for current bottlenecks in ClojureScript performance (e.g. data type choices, calling patterns, general architecture, impacts on filesize)"]
             [:li "ClojureScript compiler output analysis"]
             [:li "Utilizing JS Typed arrays for more efficient storage & performance"]
             [:li "Working with binary data (transferring, parsing, processing)"]
             [:li "Important WebGL concepts (processing pipeline, attributes, buffer types, textures, render targets)"]
             [:li "Geometry & linear algebra basics (vector spaces & matrices)"]
             [:li "Seamlessly use " [:a {:href "http://thi.ng/geom"} "thi.ng/geom"] " with WebGL & GLSL for rendering and offloading computations to the GPU"]
             [:li "Building re-usable WebGL components with Reagent/React.js & Figwheel"]
             [:li "Build modular GLSL shaders and compose shader functionality using " [:a {:href "http://thi.ng/shadergraph"} "thi.ng/shadergraph"]]
             [:li "Declarative multi-pass GPGPU shader processing"]
             [:li "Use " [:a {:href "http://en.wikipedia.org/wiki/Web_worker"} "Web workers"] " with ClojureScript to achieve parallelism"]
             [:li "Efficient data transfer between Web workers"]
             [:li "Introduction to modular compilation of ClojureScript apps"]
             [:li "Integrate " [:a {:href "http://asmjs.org"} "asm.js"] " blocks & typed arrays to improve CPU-bound performance"]
             [:li "Brief introduction to C language for writing performance critical code"]
             [:li "Introduction to Emscripten C cross-compiler & integration with ClojureScript"]
             [:li "Offload computations to a server and stream back results in realtime via Websockets"]
             [:li "Use the browser's LocalHistory object as inter-session cache"]]
            [:p "Most of the techniques discussed are also applicable and easily transferrable to a number of other use cases requiring a similarly high runtime performance. Included too is an in-depth walkthrough of realworld projects demonstrating related techniques."]
            [:h3 "Requirements"]
            [:ul
             [:li "OSX / Linux / Windows7+ laptop with " [:a {:href "http://www.browserleaks.com/webgl"} "WebGL compatible GPU"]]
             [:li "Intermediate ClojureScript knowledge, not for complete beginners of the language"]]
            [:p "Included in workshop fee:"]
            [:ul
             [:li "Food, hot & cold drinks"]]
            [:p "Please also see " [:a {:href "#tandc"} "Terms & Conditions"] " below."]]}
